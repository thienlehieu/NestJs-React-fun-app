[{"D:\\Computer Science Course\\Documents\\NestJs tut\\NestJs-React-fun-app\\Frontend\\src\\index.js":"1","D:\\Computer Science Course\\Documents\\NestJs tut\\NestJs-React-fun-app\\Frontend\\src\\App.jsx":"2","D:\\Computer Science Course\\Documents\\NestJs tut\\NestJs-React-fun-app\\Frontend\\src\\components\\EmployeeList.jsx":"3","D:\\Computer Science Course\\Documents\\NestJs tut\\NestJs-React-fun-app\\Frontend\\src\\components\\AddForm.jsx":"4","D:\\Computer Science Course\\Documents\\NestJs tut\\NestJs-React-fun-app\\Frontend\\src\\components\\Pagination.jsx":"5","D:\\Computer Science Course\\Documents\\NestJs tut\\NestJs-React-fun-app\\Frontend\\src\\components\\Employee.jsx":"6","D:\\Computer Science Course\\Documents\\NestJs tut\\NestJs-React-fun-app\\Frontend\\src\\graphql\\Queries.js":"7","D:\\Computer Science Course\\Documents\\NestJs tut\\NestJs-React-fun-app\\Frontend\\src\\graphql\\Mutations.js":"8","D:\\Computer Science Course\\Documents\\NestJs tut\\NestJs-React-fun-app\\Frontend\\src\\components\\EditForm.jsx":"9"},{"size":227,"mtime":1644968459000,"results":"10","hashOfConfig":"11"},{"size":564,"mtime":1645684880000,"results":"12","hashOfConfig":"11"},{"size":3109,"mtime":1645775276988,"results":"13","hashOfConfig":"11"},{"size":2363,"mtime":1645684504988,"results":"14","hashOfConfig":"11"},{"size":1577,"mtime":1645698520070,"results":"15","hashOfConfig":"11"},{"size":2383,"mtime":1645775295998,"results":"16","hashOfConfig":"11"},{"size":208,"mtime":1645629251530,"results":"17","hashOfConfig":"11"},{"size":1140,"mtime":1645667939259,"results":"18","hashOfConfig":"11"},{"size":2380,"mtime":1645698520070,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"16rphhf",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"D:\\Computer Science Course\\Documents\\NestJs tut\\NestJs-React-fun-app\\Frontend\\src\\index.js",[],["43","44"],"D:\\Computer Science Course\\Documents\\NestJs tut\\NestJs-React-fun-app\\Frontend\\src\\App.jsx",[],"D:\\Computer Science Course\\Documents\\NestJs tut\\NestJs-React-fun-app\\Frontend\\src\\components\\EmployeeList.jsx",["45","46"],"import { Modal, Button, Alert} from 'react-bootstrap';\nimport {useEffect, useState } from 'react';\nimport Employee from './Employee';\nimport AddForm from './AddForm';\nimport Pagination from './Pagination';\nimport { useQuery } from '@apollo/client';\nimport { LOAD_ALL_USERS } from '../graphql/Queries';\n\nconst EmployeeList = () => {\n    \n    const  {loading, error, data} = useQuery(LOAD_ALL_USERS);\n    const [allEmployees, setEmployees] = useState([])\n\n    if (error) console.log(error)\n\n    useEffect(() => {\n        if (data) {\n            console.log(\"get users data was called\");\n            setEmployees(data.getAllUsers);\n        }\n    }, [data]);\n\n    const [show, setShow] = useState(false);\n    \n    const handleShow = () => setShow(true);\n    const handleClose = () => setShow(false);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [employeesPerPage] = useState(10)\n\n\n    const indexOfLastEmployee = currentPage * employeesPerPage;\n    const indexOfFirstEmployee = indexOfLastEmployee - employeesPerPage;\n    const currentEmployees = allEmployees.slice(indexOfFirstEmployee, indexOfLastEmployee);\n    const totalPagesNum = Math.ceil(allEmployees.length / employeesPerPage);\n\n\n    return (\n        <>\n        <div className=\"table-title\">\n            <div className=\"row\">\n                <div className=\"col-sm-6\">\n                    <h2>Employee Information</h2>\n                </div>\n                <div className=\"col-sm-6\">\n                    <Button onClick={handleShow} className=\"btn btn-success\" data-toggle=\"modal\"><i className=\"material-icons\">&#xE147;</i> <span>Ð¡reate New Employee</span></Button>\t\t\t\t\t\n                </div>\n            </div>\n        </div>\n\n        <table className=\"table table-striped table-hover\">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Email</th>\n                    <th>Address</th>\n                    <th>Phone</th>\n                    <th>Edit</th>\n                </tr>\n            </thead>\n            <tbody>\n                {\n                currentEmployees.map(employee => (\n                    <tr key={employee._id}>\n                        <Employee employee={employee} />\n                    </tr>\n                ))  \n                }              \n            </tbody>\n        </table>\n\n        <Pagination pages = {totalPagesNum}\n                    setCurrentPage={setCurrentPage}\n                    currentEmployees ={currentEmployees}\n                    allEmployees = {allEmployees} />\n\n        <Modal show={show} onHide={handleClose} backdrop=\"static\">\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    Employee Information\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <AddForm />\n            </Modal.Body>\n            <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Cancel\n                    </Button>\n            </Modal.Footer>\n        </Modal>\n        </>\n    )\n}\n\nexport default EmployeeList;","D:\\Computer Science Course\\Documents\\NestJs tut\\NestJs-React-fun-app\\Frontend\\src\\components\\AddForm.jsx",["47","48"],"import { Form, Button } from \"react-bootstrap\"\nimport { useState } from 'react';\nimport { useMutation } from \"@apollo/client\";\nimport { CREATE_USER } from \"../graphql/Mutations\";\n\nconst AddForm = () =>{\n\n    const [newEmployee, setNewEmployee] = useState({\n        name:\"\", email:\"\", phone:\"\", address:\"\"\n    });\n\n    const onInputChange = (e) => {\n        setNewEmployee({...newEmployee,[e.target.name]: e.target.value})\n    }\n\n    const {name, email, phone, address} = newEmployee;\n\n    const [createUser, {loading, error, data}] = useMutation(CREATE_USER);\n\n    const handleSubmit = (e) => {\n        //e.preventDefault();\n        createUser({\n            variables: {\n                name: name,\n                email: email,\n                address: address,\n                phone: phone\n            }\n        });\n        if (error) console.log(error);\n    }\n\n     return (\n\n        <Form onSubmit={handleSubmit}>\n            <Form.Group>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"name *\"\n                    name=\"name\"\n                    value={name}\n                    onChange = { (e) => onInputChange(e)}\n                    required\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Control\n                    type=\"email\"\n                    placeholder=\"Email *\"\n                    name=\"email\"\n                    value={email}\n                    onChange = { (e) => onInputChange(e)}\n                    required\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Control\n                    as=\"textarea\"\n                    placeholder=\"address\"\n                    rows={3}\n                    name=\"address\"\n                    value={address}\n                    onChange = { (e) => onInputChange(e)}\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"phone\"\n                    name=\"phone\"\n                    value={phone}\n                    onChange = { (e) => onInputChange(e)}\n                />\n            </Form.Group>\n            <Button variant=\"success\" type=\"submit\" block>\n                Add Employee\n            </Button>\n        </Form>\n\n     )\n}\n\nexport default AddForm;","D:\\Computer Science Course\\Documents\\NestJs tut\\NestJs-React-fun-app\\Frontend\\src\\components\\Pagination.jsx",[],"D:\\Computer Science Course\\Documents\\NestJs tut\\NestJs-React-fun-app\\Frontend\\src\\components\\Employee.jsx",["49","50","51"],"import { useState, useEffect } from 'react';\nimport { Modal, Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport EditForm from './EditForm'\nimport { useMutation } from '@apollo/client';\nimport { DELETE_USER } from '../graphql/Mutations';\n\nconst Employee = ({employee}) => {\n\n    const [deleteUser, {loading, error, data}] = useMutation(DELETE_USER);\n\n    const handleDelete = (e) => {\n        if (window.confirm(\"Confirm to delete user!\")){\n            deleteUser({\n                variables: {\n                    _id: employee._id\n                }\n            });\n            window.location.reload(false);\n            if (data) handleClose();\n        }\n    }\n\n    const [show, setShow] = useState(false);\n    \n    const handleShow = () => setShow(true);\n    const handleClose = () => setShow(false);\n\n    return (\n        <>\n            <td>{employee.name}</td>\n            <td>{employee.email}</td>\n            <td>{employee.address}</td>\n            <td>{employee.phone}</td>\n            <td>\n                <OverlayTrigger\n                    overlay={\n                        <Tooltip id={`tooltip-top`}>\n                            Edit\n                        </Tooltip>\n                    }>\n                    <button onClick={handleShow}  className=\"btn text-warning btn-act\" data-toggle=\"modal\"><i className=\"material-icons\">&#xE254;</i></button>\n                </OverlayTrigger>\n                <OverlayTrigger\n                    overlay={\n                        <Tooltip id={`tooltip-top`}>\n                            Delete\n                        </Tooltip>\n                    }>\n                    <button onClick={handleDelete}  className=\"btn text-danger btn-act\" data-toggle=\"modal\"><i className=\"material-icons\">&#xE872;</i></button>\n                </OverlayTrigger>\n            </td>\n\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    Edit Employee\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <EditForm theEmployee={employee} />\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Cancel\n                </Button>\n            </Modal.Footer>\n        </Modal>\n        </>\n    )\n}\n\nexport default Employee;","D:\\Computer Science Course\\Documents\\NestJs tut\\NestJs-React-fun-app\\Frontend\\src\\graphql\\Queries.js",[],"D:\\Computer Science Course\\Documents\\NestJs tut\\NestJs-React-fun-app\\Frontend\\src\\graphql\\Mutations.js",[],"D:\\Computer Science Course\\Documents\\NestJs tut\\NestJs-React-fun-app\\Frontend\\src\\components\\EditForm.jsx",["52","53"],"import { Form, Button } from \"react-bootstrap\"\nimport { useState } from 'react';\nimport { useMutation } from \"@apollo/client\";\nimport { UPDATE_USER } from \"../graphql/Mutations\";\n\nconst EditForm = ({theEmployee}) =>{\n\n    const _id = theEmployee._id;\n\n    const [name, setName] = useState(theEmployee.name);\n    const [email, setEmail] = useState(theEmployee.email);\n    const [address, setAddress] = useState(theEmployee.address);\n    const [phone, setPhone] = useState(theEmployee.phone);\n\n\n    const updatedEmployee = {_id, name, email, address, phone};\n\n    const [updateUser, {loading, error, data}] = useMutation(UPDATE_USER);\n\n    const handleSubmit = (e) => {\n        //e.preventDefault();\n        //updateEmployee(id, updatedEmployee)\n        updateUser({\n            variables: updatedEmployee\n        });\n        if (error) console.log(error);\n    }\n\n     return (\n\n        <Form onSubmit={handleSubmit}>\n            <Form.Group>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Name *\"\n                    name=\"name\"\n                    value={name}\n                    onChange={(e)=> setName(e.target.value)}\n                    required\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Control\n                    type=\"email\"\n                    placeholder=\"Email *\"\n                    name=\"email\"\n                    value={email}\n                    onChange={(e)=> setEmail(e.target.value)}\n                    required\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Control\n                    as=\"textarea\"\n                    placeholder=\"Address\"\n                    rows={3}\n                    name=\"address\"\n                    value={address}\n                    onChange={(e)=> setAddress(e.target.value)}\n                />\n            </Form.Group>\n            <Form.Group>\n                <Form.Control\n                    type=\"text\"\n                    placeholder=\"Phone\"\n                    name=\"phone\"\n                    value={phone}\n                    onChange={(e)=> setPhone(e.target.value)}\n                />\n            </Form.Group>\n            <Button variant=\"success\" type=\"submit\" block>\n                Edit Employee\n            </Button>\n        </Form>\n\n     )\n}\n\nexport default EditForm;",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":25,"nodeType":"60","messageId":"61","endLine":1,"endColumn":30},{"ruleId":"58","severity":1,"message":"62","line":11,"column":13,"nodeType":"60","messageId":"61","endLine":11,"endColumn":20},{"ruleId":"58","severity":1,"message":"62","line":18,"column":25,"nodeType":"60","messageId":"61","endLine":18,"endColumn":32},{"ruleId":"58","severity":1,"message":"63","line":18,"column":41,"nodeType":"60","messageId":"61","endLine":18,"endColumn":45},{"ruleId":"58","severity":1,"message":"64","line":1,"column":20,"nodeType":"60","messageId":"61","endLine":1,"endColumn":29},{"ruleId":"58","severity":1,"message":"62","line":9,"column":25,"nodeType":"60","messageId":"61","endLine":9,"endColumn":32},{"ruleId":"58","severity":1,"message":"65","line":9,"column":34,"nodeType":"60","messageId":"61","endLine":9,"endColumn":39},{"ruleId":"58","severity":1,"message":"62","line":18,"column":25,"nodeType":"60","messageId":"61","endLine":18,"endColumn":32},{"ruleId":"58","severity":1,"message":"63","line":18,"column":41,"nodeType":"60","messageId":"61","endLine":18,"endColumn":45},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","'useEffect' is defined but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]